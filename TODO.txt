* check labels in mutable_automaton
Currently, we can add_transition(p, q, 'z') even if z is not part of
the alphabet.

* debug compilation mode
crange should not feature size and empty if !VCSN_DEBUG.

* vcsn/alphabets/char.cc
  char_letters::special_letter(...) is protected and
  set_alpha<T>::add_letter(...) (in file vcsn/alphabets/setalpha.hh)
  need it.

* mutable_automaton::set_transition
We should find a mean to forbid transition from pre to post.  This was
the case initially, but it is a useless constraint in aut-to-exp.
Maybe it should be efforced only in non labels_are_unit case.

* automata: handle with shared_ptr
One would really like to have a transpose_automaton that is able to
build its underlying automaton.  This means that using a const& to
keep the original automaton is not the best model: pointers would be
better.  But then there are issues with memory tracking, issues that
we already know how to handle thanks to shared_ptr.

* compilation jit
Well, you know what I mean.

* char.hh:
choose bw "word_t w", and const&.

* move files around
The hierarchy and the namespaces do not match.

* have a consuming version of conv()
The conversion function of weights currently takes a string and returns
a weight.  It would be convenient to have a conversion that is equivalent
to the >> operator: i.e., it reads the leading weight, and return the rest.
(Should we use a stream-based interface or an iterator-based interface?)
Similar conversion functions should be made available for labels.

This is especially important when parsing weights with a recursive
structure (e.g., polynomials or rational expressions).  For instance
in

              while (genset()->has(i.peek()))
                label += char(i.get());

polynomialset::conv() wrongly assumes that letters are represented by
characters.  This will break with integer alphabets.

* should polynomial honor the kind?
Currently polynomials maps words to weights.  However when polynomial
are used to represent entries of a LAL automaton, it would make sense
to map only letters to weights.  Can this be useful elsewhere?

Local Variables:
mode: outline
End:
