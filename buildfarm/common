#! /bin/sh

me=$(basename $0)

env=$(set +o)

# stderr LINE...
# --------------
stderr ()
{
  set +xv
  local i
  for i
  do
    echo "$i"
  done | sed -e "s,^,$me: ,g" >&2
  eval "$env"
}

# error EXIT-STATUS LINE...
# -------------------------
error ()
{
  set +xv
  local status=$1
  shift
  stderr "$@"
  exit $status
}

# fatal LINE...
# -------------
fatal ()
{
  set +xv
  error 1 "$@"
}

run ()
{
  stderr "running: $*"
  eval "$@"
}

# find_prog EXE...
# ----------------
# Set find_prog_res to the first EXE found in the path, or set it to
# empty.
find_prog ()
{
  find_prog_res=
  local i
  for i in "$@"
  do
    if $i --version >/dev/null 2>&1; then
      find_prog_res=$i
      break
    fi
  done
}


# tree_copy SOURCE DEST
# ---------------------
# Copy a file-system tree from SOURCE to DEST.  Preserve rights etc.
# DEST is cleared first.
tree_copy ()
{
  local source=$1
  local dest=$2
  rm -rf "$dest"
  mkdir -p "$dest"
  tar -C "$source" -cf - . | tar -C "$dest" -xpBf -
}


# xmv ARG...
# ----------
# Wrapper around "mv" that tries to do things three times, then fail.
# This is because sometimes we get "Input/output error" with WebDAV,
# which is a huge waste of time on the BF.
xmv ()
{
  local i
  for i in 1 2 3
  do
    if mv "$@"; then
      return 0
    fi
  done
  fatal "cannot: mv $*"
}

# older REFERENCE FILE...
# -----------------------
# Whether REFERENCE is older than all the FILEs.
older ()
{
  local ref=$1
  shift
  test -e "$ref" || return 0
  local i
  for i
  do
    if test "$ref" -ot "$i"; then
      return 0
    fi
  done
  return 1
}


## ----------- ##
## Variables.  ##
## ----------- ##

# ------- #
# Tools.  #
# ------- #
find_prog $MD5SUM gmd5sum md5sum
MD5SUM=$find_prog_res
test -n "$MD5SUM" ||
  fatal "cannot find md5sum"


# ------ #
# Host.  #
# ------ #

# Used to skip tests.
export BUILDFARM_HOSTNAME=$(hostname | sed -e 's/\..*//')


# ------------- #
# Directories.  #
# ------------- #

export DIR_SOURCE=.

export DIR_BUILD=$DIR_SOURCE

export DIR_INSTALL=$DIR_SOURCE/install

# Where we make a temporary install before going into DIR_INSTALL.
# See buildfarm/install.
export DIR_STAGE=$(dirname "$DIR_SOURCE")/stage

# Where to put the packages that will be published.
export DIR_PACKAGES=$(dirname "$DIR_SOURCE")/packages


## ------ ##
## Main.  ##
## ------ ##

stderr "$BUILDFARM_HOSTNAME: $BUILDFARM_PROJECT-$BUILDFARM_NAME-$BUILDFARM_MODE"

set -x
