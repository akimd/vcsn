# Test cases independant of the weightsets.        -*- shell-script -*-

%labels: letters
%include: common.rat
# Base cases.
ab => ab
# Error cases.
x ! 1.1: invalid label: unexpected x

# Precedence and associativity.
(ab)* => (ab)*
abc => abc
a(bc) == a.b.c
(abc).(cba) => abccba


%labels: words
%include: common.rat
# Base cases.
ab => ab
# Error cases.
x ! 1.1: wordset<char_letters>: invalid value: x, unexpected x
# Yes, the message is not as nice as one might expect, because
# when reading a ratexp, we actually read letter by letter, and
# only afterwards this is turned into a word, by concatenation.
# So first we see that 'x' is a not a valid letter.
#axb ! 1.2: wordset<char_letters>: invalid word: x: invalid letter: x
axb ! 1.2: wordset<char_letters>: invalid value: x, unexpected x

# Precedence and associativity.
(ab)* => (ab)*
abc => abc
a(bc) => a(bc)
ab(ab) => (ab)(ab)
(ab)ab => (ab)(ab)
ab(ab)ab => (ab)(ab)(ab)
ab(ab)abc*  => (ab)(ab)(ab)c*
(abc).(cba) => (abc)(cba)

# Power is about mul, not concat.
(ab){2} => (ab)(ab)
(ab){3} => (ab)(ab)(ab)
(ab){,2} => \e+ab+(ab)(ab)
(ab){1,2} => (ab)(\e+ab)
(ab){2,} => (ab)(ab)(ab)*
