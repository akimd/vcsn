# -*- shell-script -*-

%context: br
%include: common-weights.rat

# Check the alphabets.
<f>a => <f>a
<e>x ! 1.4: char_letters: invalid letter: x
<x>a ! 1.1-4: 1.1: char_letters: invalid letter: x
a<x> ! 1.2-5: 1.1: char_letters: invalid letter: x

# Check associativities.
%labels: letters
<e>b<f>d<e> => <e>b<fe>d
(<e>b<f>d)<e> => (<e>b<f>d)<e>
<e>bb<f>dd<e> => <e>bb<f>d<e>d
(<e>bb<f>dd)<e> => (<e>bb<f>dd)<e>
<e>b.b<f>d.d<e> => <e>bb<f>d<e>d
(<e>ab*<f>ab*)<g> => (<e>ab*<f>ab*)<g>
%labels: words
(<e>bb<f>dd)<e> => (<e>bb<f>dd)<e>
<e>bb<f>dd<e> => <e>bb<f>d<e>d
%labels: letters

# Check the ?, *, and + quantifiers.
(<e>a)? => \e+<e>a
(<e>a){?} => \e+<e>a
(<e>a)* => (<e>a)*
(<e>a){*} => (<e>a)*
(<e>a){+} => <e>a(<e>a)*

# Check the "{min, max}" quantifier.
(<e>a){0} => \e
(<e>a){1} => <e>a
(<e>a){2} => <e>a<e>a
(<e>a){5} => <e>a<e>a<e>a<e>a<e>a

(<e>a){0,0} == (<e>a){0}
(<e>a){1,1} == (<e>a){1}
(<e>a){2,2} == (<e>a){2}
(<e>a){5,5} == (<e>a){5}

(<e>a){0,1} => \e+<e>a
(<e>a){0,2} => \e+<e>a+<e>a<e>a
(<e>a){0,3} => \e+<e>a+<e>a<e>a+<e>a<e>a<e>a

(<e>a){,1} == (<e>a){0,1}
(<e>a){,2} == (<e>a){0,2}
(<e>a){,3} == (<e>a){0,3}

(<e>a){1,2} => <e>a(\e+<e>a)
(<e>a){1,3} => <e>a(\e+<e>a+<e>a<e>a)

(<e>a){2,5} => <e>a<e>a(\e+<e>a+<e>a<e>a+<e>a<e>a<e>a)

(<e>a){0,} => (<e>a)*
(<e>a){1,} => <e>a(<e>a)*
(<e>a){4,} => <e>a<e>a<e>a<e>a(<e>a)*




# Trivial identities: T_K in TAF-Kit's documentation.
<\z>a => \z
a<\z> => \z
<f>\z => \z
\z<f> => \z
<\e>a => a
a<\e> => a

# Trivial identities: A_K in TAF-Kit's documentation.
<f><g>a => <fg>a
<f>a<g> => <fg>a
a<f><g> => <fg>a
(<f>(a.b))<g> => <f>(ab)<g>

# Trivial identities: U_K in TAF-Kit's documentation.
\e<f> => <f>\e
ab(<f>\e) => (ab)<f>
(<f>\e)(ab) => <f>(ab)

# Trivial identities: C_{at} in TAF-Kit's documentation.
\e<f> => <f>\e
a<f> => <f>a

# "Trivial identities": conjunction.
\z&<f>\e => \z
<f>\e&\z => \z

\z&<f>a => \z
<f>a&\z => \z

<e>\e&<f>\e => <ef>\e
<e>\e&<f>a => \z
<e>a&<f>\e => \z
<e>a&<f>a => <ef>a

# Trivial identities: shuffle.
\z:<f>\e => \z
<f>\e:\z => \z

\z:<f>a => \z
<f>a:\z => \z

\e:<f>a => <f>a
<f>a:\e => <f>a
<e>\e:<f>\e => <e>\e:<f>\e
<e>\e:<f>a => <e>\e:<f>a
<e>a:<f>\e => <e>a:<f>\e
<e>a:<f>a => <e>a:<f>a

# Trivial identities: transpose.
%labels: letters
\e{T} => \e
\z{T} => \z
a{T} => a
(abc){T} => (abc){T}

%labels: words
\e{T} => \e
\z{T} => \z
a{T} => a
(abc){T} => cba

# Complement: same precedence/behavior as *.
%labels: letters
<e>a{c} => <e>a{c}
<e>(a+b){c} => <e>(a+b){c}

<e>a+<f>b{c} => <e>a+<f>b{c}
(<e>a+<f>b){c} => (<e>a+<f>b){c}

<e>(a*).<f>(b*){c} => <e>a*<f>b*{c}
(<e>(a*).<f>(b*)){c} => (<e>a*<f>b*){c}

# "Trivial identities": complement.
(<e>a){c} => a{c}
(<e>(a+b)){c} => (a+b){c}

%labels: words
\z&<f>ac => \z
<f>ab&\z => \z

<e>\e&<f>(ac) => \z
<e>(ab)&<f>\e => \z
<e>(ab)&<f>(ab) => <ef>(ab)
<e>(ab)&<f>(ac) => \z

%labels: letters

# Preference.
<e>a<+<f>b => <e>a+a{c}&<f>b

# Difference.
<e>a%(<f>b)* == (<e>a)%((<f>b)*)

# More complex computations.
<f><e>a<\z>+<e>a<\e> => <e>a
