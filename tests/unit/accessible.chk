#! /bin/sh

## ----------- ##
## Accessible. ##
## ----------- ##

## check INPUT OUTPUT
## ------------------
check ()
{
  run 0 "$2" -vcsn-accessible -A -I dot -f "$1"
}

## ------ ##
## Cycle. ##
## ------ ##

cat >a.dot <<EOF
digraph {
    vcsn_context = "law_char(ab)_b"
    I1 -> 1
    1 -> 2 [label="a"]
    2 -> 3[label="a"]
    3 -> 4[label="a"]
    4 -> 6[label="a"]
    6 -> 3[label="a"]
    4 -> F6
    5 -> 2[label="a"]
}
EOF

cat >out.exp <<EOF
digraph
{
  vcsn_context = "law_char(ab)_b"
  rankdir = LR
  node [shape = circle]
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F4
  }
  { 1 2 3 4 5 }
  I1 -> 1
  1 -> 2 [label = "a"]
  2 -> 3 [label = "a"]
  3 -> 4 [label = "a"]
  4 -> F4
  4 -> 5 [label = "a"]
  5 -> 3 [label = "a"]
}
EOF

check a.dot out.exp

## --------------- ##
## No final State. ##
## --------------- ##

cat >a.dot <<EOF
digraph {
    vcsn_context = "law_char(ab)_b"
    I1 -> 1
    1 -> 2 [label="a"]
    2 -> 3[label="a"]
    3 -> 4[label="a"]
    5 -> 2[label="a"]
}
EOF

cat >out.exp <<EOF
digraph
{
  vcsn_context = "law_char(ab)_b"
  rankdir = LR
  node [shape = circle]
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
  }
  { 1 2 3 4 }
  I1 -> 1
  1 -> 2 [label = "a"]
  2 -> 3 [label = "a"]
  3 -> 4 [label = "a"]
}
EOF

check a.dot out.exp

## ----------------- ##
## No initial state. ##
## ----------------- ##

cat >a.dot <<EOF
digraph {
    vcsn_context = "law_char(ab)_b"
    1 -> 2 [label="a"]
    2 -> 3[label="a"]
    3 -> 4[label="a"]
    4 -> F6
    5 -> 2[label="a"]
}
EOF

cat >out.exp <<EOF
digraph
{
  vcsn_context = "law_char(ab)_b"
  rankdir = LR
  node [shape = circle]
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
  }
  { }
}
EOF

check a.dot out.exp

## ------------- ##
## Simple input. ##
## ------------- ##

cat >a.dot <<EOF
digraph {
    vcsn_context = "law_char(ab)_b"
    I1 -> 1
    1 -> 2 [label="a"]
    2 -> 3[label="a"]
    3 -> 4[label="a"]
    4 -> F6
    5 -> 2[label="a"]
}
EOF

cat >out.exp <<EOF
digraph
{
  vcsn_context = "law_char(ab)_b"
  rankdir = LR
  node [shape = circle]
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F4
  }
  { 1 2 3 4 }
  I1 -> 1
  1 -> 2 [label = "a"]
  2 -> 3 [label = "a"]
  3 -> 4 [label = "a"]
  4 -> F4
}
EOF

check a.dot out.exp

