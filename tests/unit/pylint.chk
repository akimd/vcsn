#! /bin/sh

# Do not run pylint under Valgrind.
unset PREPROG

# Look for pylint.
short_python_version="$(echo $PYTHON_VERSION | cut -d'.' -f1)"

for p in pylint                                                   \
         pylint-$PYTHON_VERSION pylint$PYTHON_VERSION             \
         pylint-$short_python_version pylint$short_python_version \
         pylint3
do
    # We require Python >= 3 and Pylint >= 1.5.4.
    version=$($p --version 2> /dev/null || true)
    if $(echo "$version" |
         grep -E '^Python [3-9]\.' >/dev/null) &&
       $(echo "$version" |
         grep -E '^pylint[^ ]* ([2-9]\.*|1\.([6-9]|[1-9][0-9]+)|1\.5\.([4-9]|[1-9][0-9]+))' >/dev/null)
    then
        pylint=$p
        break
    fi
done

if test -z "$pylint"; then
    tap_skip "Could not find Pylint >= 1.5.4 with Python >= 3"
    exit 0
fi

pylintflags=--rcfile=$srcdir/python/pylintrc

# Print version in log.
run 0 ignore -$pylint $pylintflags --version

# Run Pylint on our modules.
run 0 ignore -vcsn run $pylint $pylintflags $srcdir/python/vcsn
run 0 ignore -vcsn run $pylint $pylintflags $srcdir/python/vcsn_tools

# Get all the Python scripts from libexec/.
pyscripts=$(grep -l '/usr/bin/env python' $srcdir/libexec/*)
run 0 ignore -vcsn run $pylint $pylintflags $pyscripts

# Get all the Python scripts from build-aux/bin.
pyscripts=$(grep -lr '/usr/bin/env python' $srcdir/build-aux/bin/ \
           | grep -Ev '\..*\.swp') # Ignore Vim swap files
run 0 ignore -vcsn run $pylint $pylintflags $pyscripts
