#! /bin/sh

# check PPRAT-ARGUMENTS
# ---------------------
check ()
{
  run 0 stdout rat/pprat -s "$@"
  mv stdout forward.out
  run 0 stdout rat/pprat -T "$@"
  mv stdout transposed.out

  run 1 - -diff -t -W80 --suppress-common-lines -y forward.out transposed.out
}

check 'a' <<EOF
    I1                                 |      I2
    F2                                 |      F1
  1 -> 2 [label="a"]                   |    2 -> 1 [label="a"]
  2 -> F2                              |    I2 -> 2
  I1 -> 1                              |    1 -> F1
EOF

check 'abc' <<EOF
    I1                                 |      I4
    F4                                 |      F1
  1 -> 2 [label="a"]                   |    2 -> 1 [label="a"]
  4 -> F4                              |    I4 -> 4
  I1 -> 1                              |    1 -> F1
  2 -> 3 [label="b"]                   |    3 -> 2 [label="b"]
  3 -> 4 [label="c"]                   |    4 -> 3 [label="c"]
EOF

check -L w -W br '{ab}(\e+a+b({abc}c{bcd})*){cd}' <<EOF
                                       >      I2
                                       >      I4
    F2                                 <
    F4                                 <
  1 -> F1 [label="{(ab).(cd)}"]        |    I1 -> 1 [label="{(dc).(ba)}"]
  I1 -> 1                              |    1 -> F1
  2 -> F2 [label="{cd}"]               |    I2 -> 2 [label="{dc}"]
  1 -> 2 [label="{ab}a"]               |    2 -> 1 [label="{ba}a"]
  4 -> F4 [label="{cd}"]               |    I4 -> 4 [label="{dc}"]
  4 -> 4 [label="{(abc).(bcd)}c"]      |    4 -> 4 [label="{(dcb).(cba)}c"]
  1 -> 3 [label="{ab}b"]               |    3 -> 1 [label="{ba}b"]
  3 -> 4 [label="{(abc).(bcd)}c"]      |    4 -> 3 [label="{(dcb).(cba)}c"]
EOF


run 0 - unit/transpose <<EOF
digraph
{
  vcsn_context=char_kratexpset<char_b_lal>_law
  vcsn_genset="abcd"
  rankdir=LR
  node [shape=circle]
  {
    node [style=invis,shape=none,label="",width=0,height=0]
    I1
    I3
  }
  I1 -> 1 [label="{a.b.c.d}"]
  1 -> 1 [label="{a.b}cd"]
  1 -> 2 [label="{a.b.c.d}cd"]
  2 -> 3 [label="cd"]
  I3 -> 3 [label="{a.b.c.d}"]
}
digraph
{
  vcsn_context=char_kratexpset<char_b_lal>_law
  vcsn_genset="abcd"
  rankdir=LR
  node [shape=circle]
  {
    node [style=invis,shape=none,label="",width=0,height=0]
    F1
    F3
  }
  1 -> F1 [label="{d.c.b.a}"]
  1 -> 1 [label="{b.a}dc"]
  2 -> 1 [label="{d.c.b.a}dc"]
  3 -> 2 [label="dc"]
  3 -> F3 [label="{d.c.b.a}"]
}
digraph
{
  vcsn_context=char_kratexpset<char_b_lal>_law
  vcsn_genset="abcd"
  rankdir=LR
  node [shape=circle]
  {
    node [style=invis,shape=none,label="",width=0,height=0]
    I1
    F2
  }
  I1 -> 1 [label="{a.b.c.d}"]
  1 -> 1 [label="{a.b}cd"]
  1 -> 2 [label="{a.a.b.b}cd"]
  2 -> F2
}
digraph
{
  vcsn_context=char_b_lal
  vcsn_genset="ab"
  rankdir=LR
  node [shape=circle]
  {
    node [style=invis,shape=none,label="",width=0,height=0]
    I1
    F2
  }
  I1 -> 1
  2 -> F2
  1 -> 2 [label="a"]
  1 -> 3 [label="b"]
  3 -> 3 [label="a + b"]
  2 -> 3 [label="a + b"]
}
EOF
