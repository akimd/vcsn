#! /bin/sh

# check PPRAT-ARGUMENTS
# ---------------------
# Expected output is on stdin, except the constant bits (see below).
check ()
{
  cat >out.exp <<\EOF
digraph A {
  rankdir=LR
  node [shape=circle];
EOF
  cat >> out.exp
  cat >>out.exp <<\EOF
}
EOF

  run 0 out.exp rat/pprat -s "$@"
}

# B: "\z".
check -w b -e '\z' <<\EOF
  1
  I1 [style=invis,shape=none,label="",width=0,height=0]
  I1 -> 1
EOF

# B: "\e".
check -w b -e '\e' <<\EOF
  1
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1
  I1 [style=invis,shape=none,label="",width=0,height=0]
  I1 -> 1
EOF

# B: "a"
check -w b -e 'a' <<\EOF
  1
  2
  1 -> 2 [label="a"]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  2 -> F2
  I1 [style=invis,shape=none,label="",width=0,height=0]
  I1 -> 1
EOF

# B: "a+b"
check -w b -e 'a+b' <<\EOF
  1
  2
  3
  1 -> 2 [label="a"]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  2 -> F2
  I1 [style=invis,shape=none,label="",width=0,height=0]
  I1 -> 1
  F3 [style=invis,shape=none,label="",width=0,height=0]
  3 -> F3
  1 -> 3 [label="b"]
EOF


# Z: "{12}\e".
check -w z -e '{12}\e' <<\EOF
  1
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1
  I1 [style=invis,shape=none,label="",width=0,height=0]
  I1 -> 1 [label="{12}"]
EOF

# Z: "{12}\e+{23}a+{34}b".
check -w z -e '{12}\e+{23}a+{34}b' <<\EOF
  1
  2
  3
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1
  I1 [style=invis,shape=none,label="",width=0,height=0]
  I1 -> 1 [label="{12}"]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  2 -> F2
  1 -> 2 [label="{23}a"]
  F3 [style=invis,shape=none,label="",width=0,height=0]
  3 -> F3
  1 -> 3 [label="{34}b"]
EOF
