#! /bin/sh

# check PPRAT-ARGUMENTS
# ---------------------
# Expected output is on stdin, except the constant bits (see below).
check ()
{
  cat >out.exp <<\EOF
digraph A {
  rankdir=LR
  node [shape=circle];
EOF
  cat >> out.exp
  cat >>out.exp <<\EOF
}
EOF

  run 0 out.exp rat/pprat -s "$@"
}

fail ()
{
  run 1 '' rat/pprat -s "$@"
}

## --- ##
## B.  ##
## --- ##

# B: "\z".
check -w b -e '\z' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  I1 -> 1
EOF

# B: "\e".
check -w b -e '\e' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1
  I1 -> 1
EOF

# B: "a"
check -w b -e 'a' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="a"]
  2 -> F2
  I1 -> 1
EOF

## -------- ##
## B: Sum.  ##
## -------- ##

# B: "a+b"
check -w b -e 'a+b' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  F3 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="a"]
  2 -> F2
  I1 -> 1
  3 -> F3
  1 -> 3 [label="b"]
EOF

# B: "abc".
check -w b -e 'abc' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F4 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="a"]
  4 -> F4
  I1 -> 1
  2 -> 3 [label="b"]
  3 -> 4 [label="c"]
EOF

# B: "ab+cd".
check -w b -e 'ab+cd' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F3 [style=invis,shape=none,label="",width=0,height=0]
  F5 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="a"]
  I1 -> 1
  3 -> F3
  2 -> 3 [label="b"]
  1 -> 4 [label="c"]
  5 -> F5
  4 -> 5 [label="d"]
EOF

# B: "a(b+c)d".
check -w b -e 'a(b+c)d' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F4 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="a"]
  5 -> 4 [label="d"]
  4 -> F4
  2 -> 3 [label="b"]
  3 -> 4 [label="d"]
  I1 -> 1
  2 -> 5 [label="c"]
EOF

# B: "(ab+cd+abcd)abc".
check -w b -e '(ab+cd+abcd)abc' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F12 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="a"]
  12 -> F12
  I1 -> 1
  6 -> 7 [label="a"]
  2 -> 3 [label="b"]
  1 -> 4 [label="c"]
  10 -> 7 [label="a"]
  4 -> 6 [label="d"]
  1 -> 5 [label="a"]
  5 -> 8 [label="b"]
  8 -> 9 [label="c"]
  9 -> 10 [label="d"]
  3 -> 7 [label="a"]
  7 -> 11 [label="b"]
  11 -> 12 [label="c"]
EOF


## --------- ##
## B: Star.  ##
## --------- ##

check -e '\z*' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1
  I1 -> 1
EOF

check -e '\e*' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1
  I1 -> 1
EOF

check -e 'a*' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="a"]
  2 -> F2
  2 -> 2 [label="a"]
  1 -> F1
  I1 -> 1
EOF

check -e '(a+b)*' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  F3 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="a"]
  2 -> F2
  2 -> 2 [label="a"]
  3 -> F3
  1 -> 3 [label="b"]
  3 -> 2 [label="a"]
  2 -> 3 [label="b"]
  3 -> 3 [label="b"]
  1 -> F1
  I1 -> 1
EOF

check -e '(ab)*' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F3 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="a"]
  1 -> F1
  3 -> 2 [label="a"]
  3 -> F3
  2 -> 3 [label="b"]
  I1 -> 1
EOF

check -e 'a**' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="a"]
  2 -> F2
  2 -> 2 [label="a"]
  1 -> F1
  I1 -> 1
EOF


## --- ##
## Z.  ##
## --- ##


# Z: "{12}\e".
check -w z -e '{12}\e' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1 [label="{12}"]
  I1 -> 1
EOF

## -------- ##
## Z: sum.  ##
## -------- ##

# Z: "\e+a+\e"
check -w z -e '\e+a+\e' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1 [label="{2}"]
  I1 -> 1
  2 -> F2
  1 -> 2 [label="a"]
EOF

# Z: "{12}\e+{23}a+{34}b".
check -w z -e '{12}\e+{23}a+{34}b' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  F3 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1 [label="{12}"]
  I1 -> 1
  2 -> F2
  1 -> 2 [label="{23}a"]
  3 -> F3
  1 -> 3 [label="{34}b"]
EOF

# left weight.
check -w z -e '{12}(\e+a+{10}b+{10}\e)' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  F3 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1 [label="{132}"]
  I1 -> 1
  2 -> F2
  1 -> 2 [label="{12}a"]
  3 -> F3
  1 -> 3 [label="{120}b"]
EOF

# right weight.
check -w z -e '(\e+a+{2}b+{3}\e){10}' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  F3 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1 [label="{40}"]
  I1 -> 1
  2 -> F2 [label="{10}"]
  1 -> 2 [label="a"]
  3 -> F3 [label="{10}"]
  1 -> 3 [label="{2}b"]
EOF

## ------------ ##
## Z: product.  ##
## ------------ ##

# Z: "{12}(ab){23}".
check -w z -e '{12}(ab){23}' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F3 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="{12}a"]
  I1 -> 1
  3 -> F3 [label="{23}"]
  2 -> 3 [label="b"]
EOF

## --------- ##
## Z: star.  ##
## --------- ##

check -w z -e '\z*' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1
  I1 -> 1
EOF

fail -w z -e '\e*'

check -w z -e '({2}a)*' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="{2}a"]
  2 -> F2
  2 -> 2 [label="{2}a"]
  1 -> F1
  I1 -> 1
EOF

check -w z -e '{2}a*{3}' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="{2}a"]
  2 -> F2 [label="{3}"]
  2 -> 2 [label="a"]
  1 -> F1 [label="{6}"]
  I1 -> 1
EOF

check -w z -e '({2}a+{3}b)*' <<\EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  F3 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="{2}a"]
  2 -> F2
  2 -> 2 [label="{2}a"]
  3 -> F3
  1 -> 3 [label="{3}b"]
  3 -> 2 [label="{2}a"]
  2 -> 3 [label="{3}b"]
  3 -> 3 [label="{3}b"]
  1 -> F1
  I1 -> 1
EOF

check -w z -e '{2}({3}a+{5}b)*{7}' <<EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F2 [style=invis,shape=none,label="",width=0,height=0]
  F3 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="{6}a"]
  2 -> F2 [label="{7}"]
  2 -> 2 [label="{3}a"]
  3 -> F3 [label="{7}"]
  1 -> 3 [label="{10}b"]
  3 -> 2 [label="{3}a"]
  2 -> 3 [label="{5}b"]
  3 -> 3 [label="{5}b"]
  1 -> F1 [label="{14}"]
  I1 -> 1
EOF

check -w z -e '{2}({3}(ab){5})*{7}' <<EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F3 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  1 -> 2 [label="{6}a"]
  1 -> F1 [label="{14}"]
  3 -> 2 [label="{15}a"]
  3 -> F3 [label="{35}"]
  2 -> 3 [label="b"]
  I1 -> 1
EOF

fail -w z -e 'a**'

## ---------- ##
## ZR: star.  ##
## ---------- ##

check -w zr '({d}\e+abc)*' <<EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  F4 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1 [label="{d*}"]
  4 -> 2 [label="{d*}a"]
  4 -> F4 [label="{d*}"]
  1 -> 2 [label="{d*}a"]
  I1 -> 1
  2 -> 3 [label="b"]
  3 -> 4 [label="c"]
EOF

check -w zr '({d}\e+ab{c})*' <<EOF
  I1 [style=invis,shape=none,label="",width=0,height=0]
  F1 [style=invis,shape=none,label="",width=0,height=0]
  F3 [style=invis,shape=none,label="",width=0,height=0]
  1 -> F1 [label="{d*}"]
  3 -> 2 [label="{c.(d*)}a"]
  I1 -> 1
  1 -> 2 [label="{d*}a"]
  3 -> F3 [label="{c.(d*)}"]
  2 -> 3 [label="b"]
EOF
