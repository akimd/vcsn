#! /bin/sh

# weighset VCSN-STANDARD-OF-ARGUMENTS
# -----------------------------------
weighset()
{
  while test $# != 0
  do
    case $1 in
      (-W) case $2 in
            (zr) echo 'ratexpset<lal_char_z>';;
            (*) echo "$2";;
           esac
           return 0;;
      (-C) echo "$2"
           return 0;;
    esac
    shift
  done
  echo 'b'
  return 0
}

# check VCSN_STANDARD-OF-ARGUMENTS
# --------------------------------
# Expected output is on stdin, except the constant bits (see below).
check ()
{
  ws=$(weighset "$@")
  cat >out.exp <<EOF
digraph
{
  vcsn_context = "lal_char(abcd)_${ws}"
  vcsn_genset = "abcd"
  rankdir = LR
  node [shape = circle]
EOF
  cat >> out.exp
  cat >>out.exp <<\EOF
}
EOF

  run 0 out.exp -vcsn-standard-of "$@" -o dot
}

fail ()
{
  run 1 '' -vcsn-standard-of -C "$@"
}

## --- ##
## B.  ##
## --- ##

# B: "\z".
check -W b -e '\z' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
  }
  { 1 }
  I1 -> 1
EOF

# B: "\e".
check -W b -e '\e' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F1
  }
  { 1 }
  I1 -> 1
  1 -> F1
EOF

# B: "a"
check -W b -e 'a' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F2
  }
  { 1 2 }
  I1 -> 1
  1 -> 2 [label = "a"]
  2 -> F2
EOF

## -------- ##
## B: Sum.  ##
## -------- ##

# B: "a+b"
check -W b -e 'a+b' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F2
    F3
  }
  { 1 2 3 }
  I1 -> 1
  1 -> 2 [label = "a"]
  1 -> 3 [label = "b"]
  2 -> F2
  3 -> F3
EOF

# B: "abc".
check -W b -e 'abc' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F4
  }
  { 1 2 3 4 }
  I1 -> 1
  1 -> 2 [label = "a"]
  2 -> 3 [label = "b"]
  3 -> 4 [label = "c"]
  4 -> F4
EOF

# B: "ab+cd".
check -W b -e 'ab+cd' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F3
    F5
  }
  { 1 2 3 4 5 }
  I1 -> 1
  1 -> 2 [label = "a"]
  1 -> 4 [label = "c"]
  2 -> 3 [label = "b"]
  3 -> F3
  4 -> 5 [label = "d"]
  5 -> F5
EOF

# B: "a(b+c)d".
check -W b -e 'a(b+c)d' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F4
  }
  { 1 2 3 4 5 }
  I1 -> 1
  1 -> 2 [label = "a"]
  2 -> 3 [label = "b"]
  2 -> 5 [label = "c"]
  3 -> 4 [label = "d"]
  4 -> F4
  5 -> 4 [label = "d"]
EOF

# B: "(ab+cd+abcd)abc".
check -W b -e '(ab+cd+abcd)abc' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F12
  }
  { 1 2 3 4 5 6 7 8 9 10 11 12 }
  I1 -> 1
  1 -> 2 [label = "a"]
  1 -> 4 [label = "c"]
  1 -> 5 [label = "a"]
  2 -> 3 [label = "b"]
  3 -> 7 [label = "a"]
  4 -> 6 [label = "d"]
  5 -> 8 [label = "b"]
  6 -> 7 [label = "a"]
  7 -> 11 [label = "b"]
  8 -> 9 [label = "c"]
  9 -> 10 [label = "d"]
  10 -> 7 [label = "a"]
  11 -> 12 [label = "c"]
  12 -> F12
EOF


## --------- ##
## B: Star.  ##
## --------- ##

check -e '\z*' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F1
  }
  { 1 }
  I1 -> 1
  1 -> F1
EOF

check -e '\e*' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F1
  }
  { 1 }
  I1 -> 1
  1 -> F1
EOF

check -e 'a*' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F2
    F1
  }
  { 1 2 }
  I1 -> 1
  1 -> F1
  1 -> 2 [label = "a"]
  2 -> F2
  2 -> 2 [label = "a"]
EOF

check -e '(a+b)*' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F2
    F3
    F1
  }
  { 1 2 3 }
  I1 -> 1
  1 -> F1
  1 -> 2 [label = "a"]
  1 -> 3 [label = "b"]
  2 -> F2
  2 -> 2 [label = "a"]
  2 -> 3 [label = "b"]
  3 -> F3
  3 -> 2 [label = "a"]
  3 -> 3 [label = "b"]
EOF

check -e '(ab)*' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F3
    F1
  }
  { 1 2 3 }
  I1 -> 1
  1 -> F1
  1 -> 2 [label = "a"]
  2 -> 3 [label = "b"]
  3 -> F3
  3 -> 2 [label = "a"]
EOF

check -e 'a**' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F2
    F1
  }
  { 1 2 }
  I1 -> 1
  1 -> F1
  1 -> 2 [label = "a"]
  2 -> F2
  2 -> 2 [label = "a"]
EOF


## --- ##
## Z.  ##
## --- ##


# Z: "{12}\e".
check -W z -e '{12}\e' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F1
  }
  { 1 }
  I1 -> 1
  1 -> F1 [label = "{12}"]
EOF

## -------- ##
## Z: sum.  ##
## -------- ##

# Z: "\e+a+\e"
check -W z -e '\e+a+\e' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F1
    F2
  }
  { 1 2 }
  I1 -> 1
  1 -> F1 [label = "{2}"]
  1 -> 2 [label = "a"]
  2 -> F2
EOF

# Z: "{12}\e+{23}a+{34}b".
check -W z -e '{12}\e+{23}a+{34}b' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F1
    F2
    F3
  }
  { 1 2 3 }
  I1 -> 1
  1 -> F1 [label = "{12}"]
  1 -> 2 [label = "{23}a"]
  1 -> 3 [label = "{34}b"]
  2 -> F2
  3 -> F3
EOF

# left weight.
check -W z -e '{12}(\e+a+{10}b+{10}\e)' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F1
    F2
    F3
  }
  { 1 2 3 }
  I1 -> 1
  1 -> F1 [label = "{132}"]
  1 -> 2 [label = "{12}a"]
  1 -> 3 [label = "{120}b"]
  2 -> F2
  3 -> F3
EOF

# right weight.
check -W z -e '(\e+a+{2}b+{3}\e){10}' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F1
    F2
    F3
  }
  { 1 2 3 }
  I1 -> 1
  1 -> F1 [label = "{40}"]
  1 -> 2 [label = "a"]
  1 -> 3 [label = "{2}b"]
  2 -> F2 [label = "{10}"]
  3 -> F3 [label = "{10}"]
EOF

## ------------ ##
## Z: product.  ##
## ------------ ##

# Z: "{12}(ab){23}".
check -W z -e '{12}(ab){23}' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F3
  }
  { 1 2 3 }
  I1 -> 1
  1 -> 2 [label = "{12}a"]
  2 -> 3 [label = "b"]
  3 -> F3 [label = "{23}"]
EOF

## --------- ##
## Z: star.  ##
## --------- ##

check -W z -e '\z*' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F1
  }
  { 1 }
  I1 -> 1
  1 -> F1
EOF

fail -W z -e '\e*'

check -W z -e '({2}a)*' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F2
    F1
  }
  { 1 2 }
  I1 -> 1
  1 -> F1
  1 -> 2 [label = "{2}a"]
  2 -> F2
  2 -> 2 [label = "{2}a"]
EOF

check -W z -e '{2}a*{3}' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F2
    F1
  }
  { 1 2 }
  I1 -> 1
  1 -> F1 [label = "{6}"]
  1 -> 2 [label = "{2}a"]
  2 -> F2 [label = "{3}"]
  2 -> 2 [label = "a"]
EOF

check -W z -e '({2}a+{3}b)*' <<\EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F2
    F3
    F1
  }
  { 1 2 3 }
  I1 -> 1
  1 -> F1
  1 -> 2 [label = "{2}a"]
  1 -> 3 [label = "{3}b"]
  2 -> F2
  2 -> 2 [label = "{2}a"]
  2 -> 3 [label = "{3}b"]
  3 -> F3
  3 -> 2 [label = "{2}a"]
  3 -> 3 [label = "{3}b"]
EOF

check -W z -e '{2}({3}a+{5}b)*{7}' <<EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F2
    F3
    F1
  }
  { 1 2 3 }
  I1 -> 1
  1 -> F1 [label = "{14}"]
  1 -> 2 [label = "{6}a"]
  1 -> 3 [label = "{10}b"]
  2 -> F2 [label = "{7}"]
  2 -> 2 [label = "{3}a"]
  2 -> 3 [label = "{5}b"]
  3 -> F3 [label = "{7}"]
  3 -> 2 [label = "{3}a"]
  3 -> 3 [label = "{5}b"]
EOF

check -W z -e '{2}({3}(ab){5})*{7}' <<EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F3
    F1
  }
  { 1 2 3 }
  I1 -> 1
  1 -> F1 [label = "{14}"]
  1 -> 2 [label = "{6}a"]
  2 -> 3 [label = "b"]
  3 -> F3 [label = "{35}"]
  3 -> 2 [label = "{15}a"]
EOF

fail -W z -e 'a**'

## ---------- ##
## ZR: star.  ##
## ---------- ##

check -W zr -e '({d}\e+abc)*' <<EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F1
    F4
  }
  { 1 2 3 4 }
  I1 -> 1
  1 -> F1 [label = "{d*}"]
  1 -> 2 [label = "{d*}a"]
  2 -> 3 [label = "b"]
  3 -> 4 [label = "c"]
  4 -> F4 [label = "{d*}"]
  4 -> 2 [label = "{d*}a"]
EOF

check -W zr -e '({d}\e+ab{c})*' <<EOF
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I1
    F1
    F3
  }
  { 1 2 3 }
  I1 -> 1
  1 -> F1 [label = "{d*}"]
  1 -> 2 [label = "{d*}a"]
  2 -> 3 [label = "b"]
  3 -> F3 [label = "{c.(d*)}"]
  3 -> 2 [label = "{c.(d*)}a"]
EOF
