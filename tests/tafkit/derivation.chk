#! /bin/sh

##########################
## Regular derivation.  ##
##########################

# check RAT-EXP STRING RESULT
# ---------------------------
# Check that the derivation of RAT-EXP by STRING is RESULT.
check ()
{
  local re
  case $1 in
    ('(?@'*) re=$1;;
    (*)      re="(?@lal_char(abc)_ratexpset<lal_char(xyz)_z>)$1";;
  esac
  run 0 "$3" -vcsn derivation -Ee "$re" "$2"
}

## -------------------- ##
## Classical examples.  ##
## -------------------- ##

# EAT, Example 4.3.
E1='(<1/6>a*+<1/3>b*)*'
# E1 typed.
E1t="(?@lal_char(ab)_q)$E1"

## ------------------- ##
## derived_term(exp).  ##
## ------------------- ##



###########################
## Breaking derivation.  ##
###########################


## --------------------- ##
## Documented examples.  ##
## --------------------- ##

# FIXME: Migrate to python/derivation.py once we have means to check
# the origins.

# On The Number Of Broken Derived Terms Of A Rational Expression.
F2='a*+b*'
E2="($F2)(a($F2))"
E2t="(?@lal_char(ab)_b)$E2"


# Example 5.
export VCSN_ORIGINS=1
run 0 -f $medir/e2-dt-breaking.gv -vcsn derived-term -Ee "$E2t" 1
unset VCSN_ORIGINS

# Figure 3.
export VCSN_ORIGINS=1
run 0 -f $medir/h3-dt.gv -vcsn derived-term -Ee 'a(b+c+d)'
run 0 -f $medir/h3-dt-breaking.gv -vcsn derived-term -Ee 'a(b+c+d)' 1
unset VCSN_ORIGINS
