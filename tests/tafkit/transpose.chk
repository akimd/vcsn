#! /bin/sh

## --------------------------- ##
## vcsn transpose(automaton).  ##
## --------------------------- ##

# check CONTEXT RATEXP < DIFF
# ---------------------------
# Compare the standard RATEXP to its transposed, expect DIFF.
check ()
{
  run 0 '' -vcsn standard -E -C "$1" -O dot -e "$2" -o forward.out
  run 0 '' -vcsn transpose -I dot -O dot -A -f forward.out -o transposed.out

  run "$3" - -diff -t -W80 --suppress-common-lines -y forward.out transposed.out
}

check 'lal_char(abcd)_b' 'a' 0 <<\EOF
EOF

check 'lal_char(abcd)_b' 'abc' 1 <<\EOF
  0 -> 1 [label = "a"]                 |    0 -> 1 [label = "c"]
  2 -> 3 [label = "c"]                 |    2 -> 3 [label = "a"]
EOF

check 'law_char(abcd)_ratexpset<law_char(abcd)_b>' '<ab>(\e+a+b(<abc>c<bcd>)*)<cd>' 1 <<\EOF
    F0                                 |      I1
    F1                                 |      I2
    F2                                 |      I3
  I0 -> 0                              |    I0 -> 0 [label = "<dc>"]
  0 -> F0 [label = "<(ab)(cd)>"]       |    I1 -> 1 [label = "<dc>"]
  0 -> 1 [label = "<ab>a"]             |    I2 -> 2 [label = "<dc>"]
  0 -> 2 [label = "<ab>b"]             |    I3 -> 3 [label = "<(dc)(ba)>"]
  1 -> F1 [label = "<cd>"]             |    0 -> 3 [label = "<ba>a"]
  2 -> F2 [label = "<cd>"]             |    1 -> 3 [label = "<ba>b"]
  2 -> 3 [label = "<(abc)(bcd)>c"]     |    2 -> 1 [label = "<(dcb)(cba)>c"]
  3 -> F3 [label = "<cd>"]             |    2 -> 2 [label = "<(dcb)(cba)>c"]
  3 -> 3 [label = "<(abc)(bcd)>c"]     |    3 -> F3
EOF


# involution AUTOMATON
# --------------------
# Check that transposition is an involution on AUTOMATON.
involution ()
{
  run 0 '' -vcsn transpose -A -f $1 -o transpose.out
  cp $1 out.exp
  run 0 out.exp -vcsn transpose -A -f transpose.out
}

run 0 '' -vcsn de-bruijn -C 'lal_char(abcd)_z' -o de-bruin-2.gv 2
involution de-bruin-2.gv
