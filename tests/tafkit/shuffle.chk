#! /bin/sh

## ------------------------ ##
## (ab)* )( (<-1>ab)* = \e. ##
## ------------------------ ##
# TAFKIT manual, Figure 3.13, left [as of 2013-10-10]

cat > abs.gv <<\EOF
digraph
{
  vcsn_context = "lal_char(ab)_z"
  rankdir = LR
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I0
    F0
    F2
  }
  {
    node [shape = circle]
    0
    1
  }
  I0 -> 0
  0 -> F0
  0 -> 1 [label = "a"]
  1 -> 0 [label = "b"]
}
EOF

cat > mabs.gv <<\EOF
digraph
{
  vcsn_context = "lal_char(ab)_z"
  rankdir = LR
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I0
    F0
    F2
  }
  {
    node [shape = circle]
    0
    1
  }
  I0 -> 0
  0 -> F0
  0 -> 1 [label = "<-1>a"]
  1 -> 0 [label = "<1>b"]
}
EOF

run 0 - -vcsn-shuffle -f abs.gv mabs.gv <<\EOF
digraph
{
  vcsn_context = "lal_char(ab)_z"
  rankdir = LR
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I0
    F0
  }
  {
    node [shape = circle]
    0
    1
    2
    3
  }
  I0 -> 0
  0 -> F0
  0 -> 1 [label = "a"]
  0 -> 2 [label = "<-1>a"]
  1 -> 0 [label = "b"]
  1 -> 3 [label = "<-1>a"]
  2 -> 0 [label = "b"]
  2 -> 3 [label = "a"]
  3 -> 1 [label = "b"]
  3 -> 2 [label = "b"]
}
EOF


## ---------------------- ##
## (a)* )( (<-1>a)* = \e. ##
## ---------------------- ##
# TAFKIT manual, Figure 3.13, right [as of 2013-10-10]

#run 0 '' -vcsn-standard -C 'lal_char(a)_z' -e '(a)*' -o as.gv
cat > as.gv <<\EOF
digraph
{
  vcsn_context = "lal_char(a)_z"
  rankdir = LR
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I0
    F0
    F1
  }
  {
    node [shape = circle]
    0
  }
  I0 -> 0
  0 -> F0
  0 -> 0 [label = "a"]
}
EOF

#run 0 '' -vcsn-standard -C 'lal_char(a)_z' -e '(<-1>a)*' -o mas.gv
cat > mas.gv <<\EOF
digraph
{
  vcsn_context = "lal_char(a)_z"
  rankdir = LR
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I0
    F0
    F1
  }
  {
    node [shape = circle]
    0
  }
  I0 -> 0
  0 -> F0
  0 -> 0 [label = "<-1>a"]
}
EOF

run 0 - -vcsn-shuffle -f as.gv mas.gv <<\EOF
digraph
{
  vcsn_context = "lal_char(a)_z"
  rankdir = LR
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I0
    F0
  }
  {
    node [shape = circle]
    0
  }
  I0 -> 0
  0 -> F0
}
EOF


## ---------- ##
## ABC )( ab. ##
## ---------- ##

run 0 '' -vcsn-standard -C 'lal_char(ab)_z' -e 'ab' -o ab.gv
run 0 '' -vcsn-standard -C 'lal_char(ABC)_z' -e 'ABC' -o ABC.gv

cat > ab_shuffle_ABC.gv <<\EOF
digraph
{
  vcsn_context = "lal_char(ABCab)_z"
  rankdir = LR
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I0
    F11
  }
  {
    node [shape = circle]
    0
    1
    2
    3
    4
    5
    6
    7
    8
    9
    10
    11
  }
  I0 -> 0
  0 -> 1 [label = "A"]
  0 -> 2 [label = "a"]
  1 -> 3 [label = "B"]
  1 -> 4 [label = "a"]
  2 -> 4 [label = "A"]
  2 -> 5 [label = "b"]
  3 -> 6 [label = "C"]
  3 -> 7 [label = "a"]
  4 -> 7 [label = "B"]
  4 -> 8 [label = "b"]
  5 -> 8 [label = "A"]
  6 -> 9 [label = "a"]
  7 -> 9 [label = "C"]
  7 -> 10 [label = "b"]
  8 -> 10 [label = "B"]
  9 -> 11 [label = "b"]
  10 -> 11 [label = "C"]
  11 -> F11
}
EOF

run 0 -f ab_shuffle_ABC.gv -vcsn-shuffle -f ABC.gv ab.gv

# Of course we'll have 5 letters.
run 0 - -vcsn-enumerate -f ab_shuffle_ABC.gv 10 <<\EOF
ABCab
ABaCb
ABabC
AaBCb
AaBbC
AabBC
aABCb
aABbC
aAbBC
abABC
EOF

## ----------------- ##
## Non-commutative.  ##
## ----------------- ##

run 0 '' -vcsn-standard -C 'lal_char(ab)_ratexpset<lal_char(xy)_b>' \
         -e '<x>a<y>b' -o ab.gv
run 0 '' -vcsn-shuffle -o ab-ab.gv -f ab.gv ab.gv
run 0 - -vcsn-enumerate -f ab-ab.gv 4 <<\EOF
<x.x.y.y+x.x.y.y+x.x.y.y+x.x.y.y>aabb
<x.y.x.y+x.y.x.y>abab
EOF
