#! /bin/sh

## ------------ ##
## aut-to-exp.  ##
## ------------ ##

# check EXP-IN EXP-OUT
# --------------------
# Check that aut-to-exp(standard(EXP-IN)) = EXP-OUT.
check ()
{
  run 0 stdout -vcsn standard -e "$1" -o std.gv
  run 0 "$2" -vcsn aut-to-exp -Af std.gv
}

check 'a'                            'a'
check 'ab'                           'ab'
check 'a*'                           '\e+aa*'
check 'a+b'                          'a+b'
check '(?@lal_char(ab)_z)<2>(ab)<3>' '(<2>ab)<3>'
check '(?@law_char(ab)_z)<2>(ab)<3>' '<6>ab'


check '(?@lal_char(abc)_z)<2>(<3>a+<5>b)<7>c<11>' \
      '(<6>a<7>c+<10>b<7>c)<11>'

# Likewise, but check the order of the products.
check '(?@lal_char(abc)_ratexpset<lal_char(vwxyz)_b>)<v>(<w>a+<x>b)<y>c<z>' \
      '(<vw>a<y>c+<vx>b<y>c)<z>'

# Check the associativity of the product.
run 0 '<x>a(<y>b)*<z>c' -vcsn aut-to-exp -f $medir/a.gv

# check LIB-AUTOMATON EXP-OUT
# ---------------------------
# Check that aut-to-exp(AUTOMATON) = EXP-OUT.
check ()
{
  run 0 "$2" -vcsn aut-to-exp -Af "$1"
}

check lal_char_b/a1.gv    '(a+b)*ab(a+b)*'
check lal_char_b/b1.gv    '(a+b)*a(a+b)*'
check lal_char_b/evena.gv 'b*a(b+ab*a)*'
check lal_char_b/oddb.gv  'a*b(a+ba*b)*'

check lal_char_z/b1.gv     '(a+b)*a(a+b)*'
check lal_char_z/binary.gv '(0+1)*1(<2>0+<2>1)*'
check lal_char_z/c1.gv     '(a+b)*b(<2>a+<2>b)*'
check lal_char_z/d1.gv     '(a+b)*(a+<-1>b)(a+b)*'

check lal_char_zmin/minab.gv     '(<1>a+b)*+(a+<1>b)*'
check lal_char_zmin/minblocka.gv '(a+b)*b(<1>a)*b(a+b)*'
check lal_char_zmin/slowgrow.gv \
      '(a+b)*b(<1>a)*b(a+<1>a(<1>a)*b)*'


## ----------------- ##
## eliminate-state.  ##
## ----------------- ##

# Eliminate state 0, or 1, or 2.
for i in 0 1 2
do
  run 0 -f $medir/lao-elim-$i.gv -vcsn eliminate-state -f $medir/lao.gv $i
done
