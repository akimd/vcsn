#! /bin/sh

# fst FILE
# --------
# Check that OpenFST accepts FILE.  Skip if we don't have OpenFST.
if echo 0 | fstcompile >/dev/null; then
  fst ()
  {
    run "$@"
  }
else
  fst ()
  {
    tap_skip 'OpenFST not installed'
  }
fi

# check GV EFSM
# -------------
# Check the conversion from Dot to FSM, and back.
check ()
{
  # Check TAF-Kit's support for EFSM I/O.
  run 0 -f "$2" -vcsn cat -O efsm -Af "$1"
  # Bring the library file here, "run" does not under $VCSN_DATA_PATH.
  # Do not use the same name, because we open the output file before
  # the input one, and therefore the input tries to read the
  # output....
  mkdir -p $(dirname "$1.ref")
  run 0 '' -vcsn cat -Af "$1" -o "$1.ref"
  run 0 -f "$1.ref" -vcsn cat -I efsm -Af "$2"

  # Check OpenFST's support for EFSM I/O.
  fst=$(basename $2 .efsm).fst
  fst 0 ''    -efstcompile "$2" "$fst"
  fst 0 -f $2 -efstdecompile "$fst"
}

# A Boolean automaton.
check lal_char_b/a1.gv $medir/a1.efsm
check lal_char_z/binary.gv $medir/binary.efsm



# Check that Open FST and V2 understand the weights the same way.
#
# c1^2 by v2.
run 0 '' -vcsn power -O efsm -o c12.v2.efsm -f lal_char_z/c1.gv 2
fst 0 '' -efstcompile c12.v2.efsm c12.v2.ofst

# c1^2 by OpenFST.
run 0 '' -vcsn cat -O efsm -o c1.efsm -f lal_char_z/c1.gv
fst 0 '' -efstcompile c1.efsm c1.ofst
fst 0 '' -fstintersect c1.ofst c1.ofst c12.ofst.ofst

# Let OpenFST compare them.
fst 0 '' -fstequal c12.v2.ofst c12.ofst.ofst
