#! /bin/sh

## --------- ##
## Weights.  ##
## --------- ##

# check_weight CONTEXT INPUT OUTPUT
# ---------------------------------
# Check -C and (?@...) support.
check_weight ()
{
  run 0 "$3" -vcsn cat -C "$1" -We "$2"
}

check_weight 'lal_char(a)_b' 0 0
check_weight 'lal_char(a)_b' 1 1
check_weight 'lal_char(a)_z' 123 123
check_weight 'lal_char(x)_ratexpset<lal_char(abc)_z>' 'a*<23>bc' 'a*<23>(bc)'

# Check that we don't ignore trailing characters.
run 1 '' -vcsn cat -C 'lal_char(ab)_z' -We '123+'


## --------- ##
## RatExps.  ##
## --------- ##

# There are not many such tests because rat/ tests cover this
# extensively.

# check_exp CONTEXT INPUT OUTPUT
# ------------------------------
# Check -C and (?@...) support.
check_exp ()
{
  run 0 "$3" -vcsn cat -E -C "$1" -e "$2"
}

check_exp 'lal_char(abcd)_b' "abcd" "abcd"
check_exp 'lal_char(abc)_ratexpset<lal_char(def)_ratexpset<lal_char(xyz)_z>>' \
    "<<<42>x>d>a+<<<51>x>d>a+(<<<42>y>e>b)*" \
    "<<<42>x>d>a+<<<51>x>d>a+(<<<42>y>e>b)*"

# Check that we do support digits as letters.
check_exp 'lal_char(0123)_b' "0123" "0123"
check_exp 'lal_char(0123)_z' "<0123>0123" "<123>(0123)"


# check_latex CONTEXT INPUT OUTPUT
# --------------------------------
# Check -C and (?@...) support.
check_latex ()
{
  run 0 "$3" -vcsn cat -O latex -E -C "$1" -e "$2"
}

check_latex 'lal_char(abcd)_b' "abcd" "a \\, b \\, c \\, d"
check_latex 'lal_char(abc)_ratexpset<lal_char(def)_ratexpset<lal_char(xyz)_z>>' \
    "<<<42>x>d>a+<<<51>x>d>a+(<<<42>y>e>b)*" \
    ' \langle  \langle  \langle 42 \rangle \,x \rangle \,d \rangle \,a +  \langle  \langle  \langle 51 \rangle \,x \rangle \,d \rangle \,a + \left( \langle  \langle  \langle 42 \rangle \,y \rangle \,e \rangle \,b\right)^{*}'

# Check that we do support digits as letters.
check_latex 'lal_char(0123)_b' "0123" "0 \\, 1 \\, 2 \\, 3"
check_latex 'lal_char(0123)_z' "<0123>0123"  \
            ' \langle 123 \rangle \,\left(0 \, 1 \, 2 \, 3\right)'


## ------------------- ##
## Standard Automata.  ##
## ------------------- ##


# check_stdof CONTEXT RATEXP
# --------------------------
# Check that vcsn cat is idempotent on the standard RATEXP.
check_stdof ()
{
  run 0 '' -vcsn standard -E -C "$1" -e "$2" -o std.gv
  cp std.gv out.exp
  run 0 out.exp -vcsn cat -Af out.exp
}

check_stdof 'lal_char(abcd)_b' "abcd"
check_stdof 'lal_char(abcd)_z' "<3>\\e"
check_stdof 'lal_char(abcd)_zmin' "<3>(\\e+a)"



## ------------------ ##
## General Automata.  ##
## ------------------ ##

for a in $medir/*.in.gv
do
  run 0 -f ${a%.in.gv}.out.gv -vcsn cat -Af $a
  run 0 -f ${a%.in.gv}.tex -vcsn cat -O tikz -Af $a
done
