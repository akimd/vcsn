#! /bin/sh

## --------- ##
## Weights.  ##
## --------- ##

# check_weight CONTEXT INPUT OUTPUT
# ---------------------------------
# Check -C and (?@...) support.
check_weight ()
{
  run 0 "$3" -vcsn-cat -C "$1" -We "$2"
}

check_weight 'lal_char(a)_b' 0 0
check_weight 'lal_char(a)_b' 1 1
check_weight 'lal_char(a)_z' 123 123
check_weight 'lal_char(x)_ratexpset<lal_char(abc)_z>' 'a*<23>bc' 'a*.<23>(b.c)'


## ------------- ##
## Polynomials.  ##
## ------------- ##

# check_poly CONTEXT INPUT OUTPUT
# -------------------------------
# Check -C and (?@...) support.
check_poly ()
{
  run 0 "$3" -vcsn-cat -C "$1" -Pe "$2"
}

check_poly 'lal_char(a)_b' '\z' '\z'
check_poly 'lal_char(a)_b' '\z+\z' '\z'

check_poly 'lal_char(a)_b' 'a' 'a'
check_poly 'lal_char(ab)_b' 'a+b+b+a' 'a + b'

check_poly 'lal_char(ab)_z' 'a+b+b+a+b' '<2>a + <3>b'
check_poly 'lal_char(ab)_z' 'a+b+b+<-1>a+b' '<3>b'

check_poly 'law_char(a)_b' '\e+\e' '\e'

check_poly 'law_char(ab)_z' 'ba+ab+bb+aa+a+b+\e+bb+aa' \
      '\e + a + b + <2>aa + ab + ba + <2>bb'

check_poly 'lal_char(abc)_ratexpset<lal_char(xyz)_z>' \
   'a + a + <x>b + <y>b' '<\e+\e>a + <x+y>b'


## --------- ##
## RatExps.  ##
## --------- ##

# There are not many such tests because rat/ tests cover this
# extensively.

# check_exp CONTEXT INPUT OUTPUT
# ------------------------------
# Check -C and (?@...) support.
check_exp ()
{
  run 0 "$3" -vcsn-cat -E -C "$1" -e "$2"
  run 0 "$3" -vcsn-cat -E -e "(?@$1)$2"
}

check_exp 'lal_char(abcd)_b' "abcd" "a.b.c.d"
check_exp 'lal_char(abc)_ratexpset<lal_char(def)_ratexpset<lal_char(xyz)_z>>' \
    "<<<42>x>d>a+<<<51>x>d>a+(<<<42>y>e>b)*" \
    "<<<42>x>d>a+<<<51>x>d>a+(<<<42>y>e>b)*"

# Check that we do support digits as letters.
check_exp 'lal_char(0123)_b' "0123" "0.1.2.3"
check_exp 'lal_char(0123)_z' "<0123>0123" "<123>(0.1.2.3)"


# check_info EXP-OUT VCSN-CAT-ARGS...
# -----------------------------------
check_info ()
{
  run 0 - -vcsn-cat "$@" -O info
}

check_info -Ee '(?@lal_char(abc)_b)abc' <<\EOF
type: ratexpset<lal_char(abc)_b>
sum: 0
intersection: 0
prod: 1
star: 0
zero: 0
one: 0
atom: 3
EOF

check_info -Ee '(?@lal_char(abc)_b)\e+bc*' <<\EOF
type: ratexpset<lal_char(abc)_b>
sum: 1
intersection: 0
prod: 1
star: 1
zero: 0
one: 1
atom: 2
EOF



## ------------------- ##
## Standard Automata.  ##
## ------------------- ##


# check_stdof CONTEXT RATEXP
# --------------------------
# Check that vcsn-cat is idempotent on the standard RATEXP.
check_stdof ()
{
  run 0 '' -vcsn-standard -E -C "$1" -e "$2" -o std.gv
  cp std.gv out.exp
  run 0 out.exp -vcsn-cat -Af out.exp
}

check_stdof 'lal_char(abcd)_b' "abcd"
check_stdof 'lal_char(abcd)_z' "<3>\\e"
check_stdof 'lal_char(abcd)_zmin' "<3>(\\e+a)"


## ------------------ ##
## Invalid automata.  ##
## ------------------ ##

# Check invalid input.
fail_aut ()
{
  cat >in.gv
  run 1 '' -vcsn-cat -Af in.gv
}

# Invalid label: letter not in alphabet.
fail_aut <<\EOF
digraph
{
  vcsn_context = "lal_char_b"
  vcsn_alphabet = "a"
  0 -> 1 [label = a]
  1 -> F1
  I0 -> 0
}
EOF

# Invalid label: \e is not valid in LAL.
fail_aut <<\EOF
digraph
{
  vcsn_context = "lal_char(a)_b"
  0 -> 1 [label = "\\e"]
  1 -> F1
  I0 -> 0
}
EOF

# Invalid label: aa is not valid in LAL.
fail_aut <<\EOF
digraph
{
  vcsn_context = "lal_char(a)_b"
  0 -> 1 [label = "aa"]
  1 -> F1
  I0 -> 0
}
EOF

# Invalid label: missing '>'.
fail_aut <<\EOF
digraph
{
  vcsn_context = "lal_char(a)_z"
  0 -> 1 [label = "<2"]
  1 -> F1
  I0 -> 0
}
EOF

# No context defined (see the typo in vcsn_context).
fail_aut <<\EOF
digraph
{
  vcsn_contxt = "lal_char(ab)_b"
  0 -> 1 [label = a]
  1 -> F1
  I0 -> 0
}
EOF

# Invalid context.
fail_aut <<\EOF
digraph
{
  vcsn_context = "unknown"
  0 -> 1 [label = a]
  1 -> F1
  I0 -> 0
}
EOF

# Invalid initial label.
fail_aut <<\EOF
digraph
{
  vcsn_context = "lal_char(ab)_b"
  0 -> 1 [label = a]
  1 -> F1
  I0 -> 0 [label = a]
}
EOF

# Invalid final label.
fail_aut <<\EOF
digraph
{
  vcsn_context = "lal_char(ab)_b"
  0 -> 1 [label = a]
  1 -> F1 [label = a]
  I0 -> 0
}
EOF

## ------------------ ##
## General Automata.  ##
## ------------------ ##

for a in $medir/*.in.gv
do
  run 0 -f ${a%.in.gv}.out.gv -vcsn-cat -Af $a
  run 0 -f ${a%.in.gv}.tex -vcsn-cat -O tikz -Af $a
done
