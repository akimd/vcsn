#! /bin/sh

# Precondition: lal.
run 1 '' -vcsn-complement -f- <<\EOF
digraph
{
  vcsn_context = "law_char(ab)_b"
  I -> 0
  0 -> 0 [label="a, b"]
  0 -> F
}
EOF

# Precondition: Boolean.
run 1 '' -vcsn-complement -f- <<\EOF
digraph
{
  vcsn_context = "lal_char(ab)_z"
  I -> 0
  0 -> 0 [label="a, b"]
  0 -> F
}
EOF

# Precondition: deterministic.
run 1 '' -vcsn-complement -f- <<\EOF
digraph
{
  vcsn_context = "lal_char(ab)_b"
  I -> 0
  0 -> 1 [label="a"]
  0 -> 2 [label="a,b"]
  2 -> 2 [label="a,b"]
  2 -> F
}
EOF

# Precondition: complete.
run 1 '' -vcsn-complement -f- <<\EOF
digraph
{
  vcsn_context = "lal_char(ab)_b"
  I -> 0
  0 -> 0 [label="a"]
  0 -> F
}
EOF

# Complement for real.
cat >a.gv <<\EOF
digraph
{
  vcsn_context = "lal_char(ab)_b"
  rankdir = LR
  node [shape = circle]
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I0
    F1
  }
  {
    0
    1
    2 [color = gray]
  }
  I0 -> 0
  0 -> 1 [label = "a"]
  0 -> 2 [label = "b", color = gray]
  1 -> F1
  1 -> 2 [label = "a, b", color = gray]
  2 -> 2 [label = "a, b", color = gray]
}
EOF
cat >out.exp <<\EOF
digraph
{
  vcsn_context = "lal_char(ab)_b"
  rankdir = LR
  node [shape = circle]
  {
    node [style = invis, shape = none, label = "", width = 0, height = 0]
    I0
    F0
    F2
  }
  {
    0
    1
    2
  }
  I0 -> 0
  0 -> F0
  0 -> 1 [label = "a"]
  0 -> 2 [label = "b"]
  1 -> 2 [label = "a, b"]
  2 -> F2
  2 -> 2 [label = "a, b"]
}
EOF
run 0 out.exp -vcsn-complement -f a.gv
# Involution.
mv out.exp in.gv
mv a.gv out.exp
run 0 out.exp -vcsn-complement -f in.gv
