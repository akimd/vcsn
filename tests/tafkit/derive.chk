#! /bin/sh

## ------------- ##
## derive(exp).  ##
## ------------- ##

# check RAT-EXP STRING RESULT
# ---------------------------
# Check that the derived term of RAT-EXP by STRING is RESULT.
check ()
{
  local re
  re="(?@lal_char(abc)_ratexpset<lal_char(xyz)_z>)$1"
  run 0 "$3" -vcsn-derive -e "$re" "$2"
}

## ---------------------------- ##
## Derive wrt a single letter.  ##
## ---------------------------- ##

# Zero, one.
check    '\z' a '\z'
check    '\e' a '\z'
check '<x>\e' a '\z'

# Letters.
check    'a' a '\e'
check    'a' b '\z'
check '<x>a' a '<x>\e'
check '<x>a' b '\z'

# Sum.
check '<x>a+<y>b' a '<x>\e'
check '<x>a+<y>b' b '<y>\e'
check '<x>a+<y>a' a '<x+y>\e'

# Prod.
check 'ab' 'a' 'b'
check 'ab' 'b' '\z'
check '(<x>a).(<y>a).(<z>a)' 'a' '<x><y>a.<z>a'

# Star.
check 'a*' a 'a*'
check 'a*' b '\z'
check '(<x>a)*' a '<x>(<x>a)*'
check '(<x>a)*' b '\z'
check '<x>a*'   a '<x>a*'
check '<x>(<y>a)*' a '<x.y>(<y>a)*'


## ------------------------------- ##
## Derive wrt to several letters.  ##
## ------------------------------- ##

check '(<x>a)*' aa   '<x.x>(<x>a)*'
check '(<x>a)*' aaaa '<x.x.x.x>(<x>a)*'
check '(<x>a)*' aaab '\z'

check '(<x>a)*(<y>b)*' aa   '<x.x>(<x>a)*.(<y>b)*'
check '(<x>a)*(<y>b)*' aabb '<x.x.y.y>(<y>b)*'


## -------------------- ##
## Classical examples.  ##
## -------------------- ##

# EAT, Example 4.3.
E1='(<1/6>a*+<1/3>b*)*'
# E1 typed.
E1t="(?@lal_char(ab)_q)$E1"
check "$E1t"  a  "<1/3>a*.$E1"
check "$E1t"  b  "<2/3>b*.$E1"
check "$E1t" aa  "<4/9>a*.$E1"
check "$E1t" ab  "<2/9>b*.$E1"
check "$E1t" ba  "<2/9>a*.$E1"
check "$E1t" bb "<10/9>b*.$E1"


## -------------------- ##
## derived_terms(exp).  ##
## -------------------- ##

export VCSN_DERIVED_TERMS=1
run 0 -f $medir/e1-dt.gv -vcsn-derived-terms -e "$E1t"
unset VCSN_DERIVED_TERMS
