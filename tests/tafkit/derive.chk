#! /bin/sh

# check RAT-EXP STRING RESULT
# ---------------------------
# Check that the derived term of RAT-EXP by STRING is RESULT.
check ()
{
  local re
  re="(?@lal_char(abc)_ratexpset<lal_char(xyz)_z>)$1"
  run 0 "$3" -vcsn-derive -e "$re" "$2"
}

## ---------------------------- ##
## Derive wrt a single letter.  ##
## ---------------------------- ##

# Zero, one.
check    '\z' a '\z'
check    '\e' a '\z'
check '<x>\e' a '\z'

# Letters.
check    'a' a '\e'
check    'a' b '\z'
check '<x>a' a '<x>\e'
check '<x>a' b '\z'

# Sum.
check '<x>a+<y>b' a '<x>\e'
check '<x>a+<y>b' b '<y>\e'
check '<x>a+<y>a' a '<x>\e+<y>\e'

# Prod.
check 'ab' 'a' 'b'
check 'ab' 'b' '\z'
check '(<x>a).(<y>a).(<z>a)' 'a' '<x.y>a.<z>a'

# Star.
check 'a*' a 'a*'
check 'a*' b '\z'
check '(<x>a)*' a '(<x>(<x>a)*)'
check '(<x>a)*' b '\z'
check '<x>a*'   a '(<x>a*)'
check '<x>(<y>a)*' a '(<x.y>(<y>a)*)'

# Classical examples.
check '(?@lal_char(ab)_q)(<1/6>a*+<1/3>b*)*' \
  a '<2>((<1/6>a*).(((<1/6>a*)+(<1/3>b*))*))'
check '(?@lal_char(ab)_q)(<1/6>a*+<1/3>b*)*' \
  b '<2>((<1/3>b*).(((<1/6>a*)+(<1/3>b*))*))'


## ------------------------------- ##
## Derive wrt to several letters.  ##
## ------------------------------- ##

check '(<x>a)*' aa   '(<x.x>(<x>a)*)'
check '(<x>a)*' aaaa '(<x.x.x.x>(<x>a)*)'
check '(<x>a)*' aaab '\z'

check '(<x>a)*(<y>b)*' aa   '(<x.x>(<x>a)*).((<y>b)*)'
check '(<x>a)*(<y>b)*' aabb '(<x.x.y.y>(<y>b)*)'
