#! /usr/bin/env python

# Make sure that we advertize all the documentation we wrote.

import os
import re

nbdir = os.environ['nbdir']

def referenced(nb):
    '''A set of all the notebook that are referenced to from
    this one.'''
    return set(re.findall(r'(\w+\.\w+\.ipynb)',
                          open(nbdir + '/' + nb).read()))

# All the documentation notebooks (<type>.<function>.ipynb) that
# exist.
existing = set([f
                for f in os.listdir(path=nbdir)
                if re.match(r'(\w+\.\w+)\.ipynb$', f)])



# Make sure that all the existing documentation about algorithms is in
# Algorithm.ipynb.
nb_referenced = referenced('Algorithms.ipynb')

status = 0
dre = nb_referenced - existing
if dre:
    print("error: referenced, not existing:", dre)
    status = 1
der = existing - nb_referenced
if der:
    print("error: existing, not referenced:", der)
    status = 1

exit(status)



# Check that the notebooks we reference to, exist.
#
# Unfortunately, we are not ready for this yet.
#
# error: expression.derivation.ipynb references {'polynomial.split.ipynb'} which does not exist
# error: expression.operators.ipynb references {'expression.tuple.ipynb'} which does not exist
# error: expression.add.ipynb references {'polynomial.add.ipynb'} which does not exist
# error: expansion.operators.ipynb references {'expansion.tuple.ipynb', 'expansion.conjunction.ipynb', 'expansion.complement.ipynb', 'expansion.rweight.ipynb', 'expansion.add.ipynb', 'expansion.lweight.ipynb'} which does not exist
# error: automaton.info.ipynb references {'automaton.format.ipynb'} which does not exist
# error: weight.operators.ipynb references {'weight.add.ipynb', 'weight.conjunction.ipynb'} which does not exist
# error: polynomial.operators.ipynb references {'polynomial.add.ipynb', 'polynomial.power.ipynb', 'polynomial.tuple.ipynb'} which does not exist

print(existing)
for nb in existing:
    diff = referenced(nb) - existing
    if diff:
        print("error: {} references {} which does not exist"
              .format(nb, diff))
        status = 1
